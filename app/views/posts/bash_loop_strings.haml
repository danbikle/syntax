.q1 Question:
.q2 In Bash how do I loop through a set of strings?
.tags
  %span.tagtag Tags:
  %a.xtag(href='/tags/bash') bash
  %a.xtag(href='/tags/loop') loop
  %a.xtag(href='/tags/grep') grep
  %a.xtag(href='/tags/echo') echo
  %a.xtag(href='/tags/for') for
  %a.xtag(href='/tags/fxpair') fxpair
  %a.xtag(href='/tags/forex') forex
  %a.xtag(href='/tags/eur_usd') eur_usd
  %a.xtag(href='/tags/cut') cut
%br/

A use-case I encountered recently asks me to split a large CSV file full of Forex data into 72 smaller files.

%br/
%br/
The data looks like this:
%pre
  %code
    $ head large_fx.csv
    aud_usd,2009-05-01 00:00:00,0.729
    aud_usd,2009-05-01 00:05:00,0.7288
    aud_usd,2009-05-01 00:10:00,0.729
    aud_usd,2009-05-01 00:15:00,0.7287
    aud_usd,2009-05-01 00:20:00,0.7287
    aud_usd,2009-05-01 00:25:00,0.729
    aud_usd,2009-05-01 00:30:00,0.729
    aud_usd,2009-05-01 00:35:00,0.7294
    aud_usd,2009-05-01 00:40:00,0.7293
    aud_usd,2009-05-01 00:45:00,0.7289
%br/

I use a nested loop to do this.

%br/
%br/

The outer loop divides the data by pair name.

%br/
%br/

The 6 pair names are:
%br/

%ul
  %li aud_usd
  %li eur_usd
  %li gbp_usd
  %li nzd_usd
  %li usd_cad
  %li usd_jpy
%br/

The inner loop divides the data by a timestamp string.
%br/
%br/

The 12 string values are listed below:
%br/

%ul
  %li :00:00,
  %li :05:00,
  %li :10:00,
  %li :15:00,
  %li :20:00,
  %li :25:00,
  %li :30:00,
  %li :35:00,
  %li :40:00,
  %li :45:00,
  %li :50:00,
  %li :55:00,

%br/

I started off by using 'echo' to help me craft the loop syntax:

%pre
  =render 'bash_loop_strings1'

Then, I worked with echo a bit more to help me create some file names:
%pre
  =render 'bash_loop_strings2'

Next, I used grep to finish the script:
%pre
  =render 'bash_loop_strings3'

I can see in the above outpt that the script gave me exactly what I wanted and it ran in under 1 minute.  Yay!

