
You are here:
%a(href='/posts/linux101_cclud') Linux101
> linux101_cclud_ip
%hr/

.q1 Question:
.q2 In Linux101 how to CCLUD Linux IP address?
.tags
  %span.tagtag Tags:
  %a.xtag(href='/tags/linux') linux
  %a.xtag(href='/tags/clud') clud
  %a.xtag(href='/tags/cclud') cclud
  %a.xtag(href='/tags/create') create
  %a.xtag(href='/tags/copy') copy
  %a.xtag(href='/tags/clone') clone
  %a.xtag(href='/tags/list') list
  %a.xtag(href='/tags/update') update
  %a.xtag(href='/tags/delete') delete

%br/

Q: Which CCLUD verbs apply to IP address?
%br/
A: I can only think of one which is List.
%br/
I only want to know which IP addresses are available for me to use, and which ones I'm using.
%br/
Also I want to know which interfaces my IP addresses are attached to.
%br/
%br/

Now, I should talk about 'interfaces' which are tangible objects I can
CCLUD and are closely related to IP addresses.

%br/
%br/

An example of an interface is a port on the side of my laptop which takes a CAT5 cable.

%br/
%br/
A Linux instance is like a building with several mailboxes.
%br/
A Linux interface is like a mailbox.
%br/
We have differences though.
%br/
Usually I can see a mailbox.
%br/
I can see some Linux interfaces on the side of my laptop.
%br/
Some Linux interfaces (WIFI for example) are invisible.
%br/
%br/
So obviously a Linux instance can have several interfaces like a building can have several mailboxes.
%br/
Both a mailbox and interface become useful after I write an address on them.
%br/
An interface needs an IP address.
%br/
Based on this analogy it is now easy to understand some simple mistakes:

%ul
  %li Interface with no IP address
  %li One IP address written on more than one interface
  %li Sending packet to IP address with no interface
  %li Assign wrong IP address to wrong interface
%br/

Q: What is the loopback interface?
%br/
A: Linux uses it to talk to itself.
%br/
Q: What is the IP address of loopback interface?
%br/
A: 127.0.0.1
%br/
%br/

Q: For an interface, which are the most interesting CCLUD verbs?
%br/
A: List and Update.

%br/
%br/

Q: How to update an interface so it has an IP address?
%br/
A1: On any Linux which gives me access to the 'desktop',
I right click on the network indicator in the upper right and then I click edit connections.
From there I pick an interface I want to use.
On a laptop that is usually the WIFI interface or the cable interface.
%br/
Finally, I choose an unused IP address and attach it to the interface and then the address switches state to 'in-use'.
%br/
For most users this process is a bit much to ask.
%br/
So, we have a technology named DHCP which automates the task of attaching an unused IP address to the interface(s) of your Linux instance(s).
%br/

A2: Another way to deal with this chore is to use a command line utility called ifconfig.
%br/
If I type in the one word command it gives me useful information about my Linux instance:
%pre
  =render 'linux101_cclud_ip1'
%br/


%br/
%br/


A3: On any Linux running on the cloud IP address administration is simplified by the cloud provider.
%br/
On the cloud your instance will usually have two interfaces.
%br/
One interface will connect to the internet.  If that interface is turned on and if it has an IP address, anyone can connect to it.
%br/
The second interface usually connects to an internal network.
%br/
The purpose of the second interface is to help you build a cluster of Linux instances which communicate over the internal network.
%br/
Also you might use this second interface to connect to services supplied by the cloud provider like network storage.
%br/
For both these types of interfaces, the cloud provider handles the chore of assigning IP addresses.
%br/
%br/


CCSUD of Linux Disk Space is the next topic of Linux101:
%br/
%a(href='/posts/linux101_ccsud_disk') linux101_ccsud_disk

%br/
%br/
%hr/
You are here:
%a(href='/posts/linux101_cclud') Linux101
> linux101_cclud_ip
